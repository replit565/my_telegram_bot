import web
from background import keep_alive 
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, FSInputFile
from aiogram.filters import Command
from datetime import datetime
import pytz
import os
import random

API_TOKEN = '8143505253:AAHXz5W3-ow08qHoNX1RKmUjqu_sFjHxKOQ'

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

user_ids = set()
user_language = {}

# --- –ö–Ω–æ–ø–∫–∏ ---
main_menu = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text="üì• –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"), KeyboardButton(text="üìå –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è")],
    [KeyboardButton(text="üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞"), KeyboardButton(text="‚ö†Ô∏è –í–∞–∂–Ω–æ–µ!")],
    [KeyboardButton(text="üéØ –ü–æ–ª—É—á–∏—Ç—å —Å–∏–≥–Ω–∞–ª")]
], resize_keyboard=True)

# --- –ö–æ–º–∞–Ω–¥–∞ /start ---
@dp.message(Command("start"))
async def start_cmd(message: types.Message):
    await message.answer(
        "üåç –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Select your language:",
        reply_markup=ReplyKeyboardMarkup(keyboard=[
            [KeyboardButton(text="–†—É—Å—Å–∫–∏–π"), KeyboardButton(text="English")]
        ], resize_keyboard=True)
    )

# --- –í—ã–±–æ—Ä —è–∑—ã–∫–∞ ---
@dp.message(lambda message: message.text in ["–†—É—Å—Å–∫–∏–π", "English"])
async def set_language(message: types.Message):
    lang = "ru" if message.text == "–†—É—Å—Å–∫–∏–π" else "en"
    user_language[message.from_user.id] = lang
    await message.answer("‚úÖ –Ø–∑—ã–∫ –≤—ã–±—Ä–∞–Ω. –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!" if lang == "ru" else "‚úÖ Language selected. Welcome!", reply_markup=main_menu)

# --- –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è ---
@dp.message(lambda message: message.text == "üìå –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è")
async def instruction(message: types.Message):
    await message.answer("1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ\n2. –í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥: MONETKA50\n3. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ —Å—á—ë—Ç –æ—Ç 1000 —Ä—É–±\n4. –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π ID")

# --- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ ---
@dp.message(lambda message: message.text == "üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞")
async def support(message: types.Message):
    await message.answer("üì© –°–≤—è–∑—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π: @kaznet20")
# --- –í–∞–∂–Ω–æ–µ ---
@dp.message(lambda message: message.text == "‚ö†Ô∏è –í–∞–∂–Ω–æ–µ!")
async def important(message: types.Message):
    await message.answer(
        "‚ùóÔ∏è–ß—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –ø–æ–¥–æ–∑—Ä–µ–Ω–∏–π –æ—Ç 1WIN, –∏–≥—Ä–∞–π—Ç–µ –∞–∫–∫—É—Ä–∞—Ç–Ω–æ –∏ –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–π—Ç–µ –∫–∞–∂–¥—É—é 5 –∏–≥—Ä—É –∏–ª–∏ 6 –∏–≥—Ä—É –≤ Mines.\n\n"
        "‚ùó–ü–æ—á–µ–º—É? –ï—Å–ª–∏ –≤—ã –±—É–¥–µ—Ç–µ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –≤—ã–∏–≥—Ä—ã–≤–∞—Ç—å, –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –ø–æ–ø–∞–¥—ë—Ç –ø–æ–¥ –ø–æ–¥–æ–∑—Ä–µ–Ω–∏–µ. "
        "–ï—Å–ª–∏ –µ–≥–æ –ø—Ä–æ–≤–µ—Ä—è—Ç –∏ –Ω–∞–π–¥—É—Ç —Å–æ—Ñ—Ç ‚Äî –ª–∞–≤–æ—á–∫–∞ –∑–∞–∫—Ä–æ–µ—Ç—Å—è!\n\n"
        "‚ö†Ô∏è –°–æ–±–ª—é–¥–∞–π—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è —Å–≤–æ–µ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞!"
    )
# --- –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ---
@dp.message(lambda message: message.text == "üì• –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
async def registration(message: types.Message):
    await message.answer(
        "üé∞ –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è –ø–æ —Å—Å—ã–ª–∫–µ:\n"
        "https://1wilib.life/v3/aggressive-casino?p=as47\n\n" 
        "üßæ  –ü–†–ò –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò –í–í–ï–î–ò–¢–ï –ü–†–û–ö–û–ú–û–î : MONETKA50\n\n"
        "‚ùóÔ∏è –°–¢–†–û–ì–û –ù–û–í–´–ô –ê–ö–ö–ê–ù–¢ 1WIN! üí•\n"
        
        "‚úçÔ∏è –°–¥–µ–ª–∞–π—Ç–µ —Ç–µ—Å—Ç–∏—Ä—É–µ–º—ã–π –¥–µ–ø–æ–∑–∏—Ç,—á—Ç–æ–±—ã –±–æ—Ç –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ –≤–∞—à–µ–º—É –∞–∫–∫–∞—É–Ω—Ç—É 1WIN, –∏ –Ω–∞—á–∞–ª –≤—ã–¥–∞–≤–∞—Ç—å —Ç–æ—á–Ω—ã–µ —Å–∏–≥–Ω–∞–ª—ã.\n"
        "‚ùì –í–≤–µ–¥–∏ —Å–≤–æ–π ID:"
    )

@dp.message(lambda message: message.text and message.text.isdigit() and len(message.text) >= 4)
async def save_id(message: types.Message):
    user_ids.add(message.from_user.id)
    await message.answer("‚úÖ ID –ø—Ä–∏–Ω—è—Ç. –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —Å–∏–≥–Ω–∞–ª—ã!")

# --- –ü–æ–ª—É—á–∏—Ç—å —Å–∏–≥–Ω–∞–ª ---
@dp.message(lambda message: message.text == "üéØ –ü–æ–ª—É—á–∏—Ç—å —Å–∏–≥–Ω–∞–ª")
async def send_signal(message: types.Message):
    if message.from_user.id not in user_ids:
        await message.answer("‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –∏ –≤–≤–µ–¥–∏ —Å–≤–æ–π ID!")
        return

    folder_path = "screens"
    if not os.path.exists(folder_path):
        await message.answer("‚ö†Ô∏è –°–∫—Ä–∏–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
        return
        
    files = os.listdir(folder_path)
    image_files = [f for f in files if f.lower().endswith(('.jpg', '.jpeg', '.png', '.gif', '.bmp', '.webp'))]
    
    if not image_files:
        await message.answer("‚ö†Ô∏è –°–∫—Ä–∏–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
        return

    selected_file = random.choice(image_files)
    file_path = os.path.join(folder_path, selected_file)

    # –ü–æ–ª—É—á–∞–µ–º –º–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è
    moscow_tz = pytz.timezone('Europe/Moscow')
    moscow_time = datetime.now(moscow_tz)
    
    photo = FSInputFile(file_path)
    await message.answer_photo(
        photo=photo,
        caption=f"üéØ –ö–æ–ª-–≤–æ –º–∏–Ω: 3\nüïê –í—Ä–µ–º—è: {moscow_time.strftime('%H:%M:%S')} (–ú–°–ö)\n‚ö†Ô∏è –†–µ–∫–æ–º–µ–Ω–¥—É—é –ø—Ä–æ–∏–≥—Ä—ã–≤–∞—Ç—å –∫–∞–∂–¥—É—é 5 –∏–≥—Ä—É —á—Ç–æ–± –Ω–µ –±—ã–ª–æ –ø–æ–¥–æ–∑—Ä–µ–Ω–∏–π –æ—Ç 1WIN üéØ"
    )

# --- –ó–∞–ø—É—Å–∫ ---
async def main():
    await dp.start_polling(bot)
    
keep_alive()
if __name__ == '__main__':
    asyncio.run(main())
app.run(host="0.0.0.0", port=8080)
